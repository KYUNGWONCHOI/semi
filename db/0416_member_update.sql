SELECT * FROM MEMBER;
DESC MEMBER;
--ID        NOT NULL VARCHAR2(20)  
--PWD       NOT NULL VARCHAR2(20)  
--PHOTO     NOT NULL VARCHAR2(200) 
--MEM_ADMIN NOT NULL NUMBER        
--POINT     NOT NULL NUMBER  
INSERT INTO MEMBER VALUES ('KO', '123', 'PATH', 1, DEFAULT);
INSERT INTO MEMBER VALUES ('PARK', '123', 'PATH', 0, DEFAULT);
INSERT INTO MEMBER VALUES ('KIM', '123', 'PATH', 0, DEFAULT);
INSERT INTO MEMBER VALUES ('JO', '123', 'PATH', 0, DEFAULT);
INSERT INTO MEMBER VALUES ('SON', '123', 'PATH', 0, DEFAULT);
INSERT INTO MEMBER VALUES ('AN', '123', 'PATH', 0, DEFAULT);
INSERT INTO MEMBER VALUES ('SEOL', '123', 'PATH', 0, DEFAULT);
INSERT INTO MEMBER VALUES ('JI', '123', 'PATH', 0, DEFAULT);
INSERT INTO MEMBER VALUES ('KI', '123', 'PATH', 0, DEFAULT);
INSERT INTO MEMBER VALUES ('choi', '123', 'PATH', 1, DEFAULT);
INSERT INTO MEMBER VALUES ('park', '123', 'PATH', 0, DEFAULT);
INSERT INTO MEMBER VALUES ('kim', '123', 'PATH', 0, DEFAULT);
INSERT INTO MEMBER VALUES ('jo', '123', 'PATH', 0, DEFAULT);
INSERT INTO MEMBER VALUES ('son', '123', 'PATH', 0, DEFAULT);
INSERT INTO MEMBER VALUES ('an', '123', 'PATH', 0, DEFAULT);
INSERT INTO MEMBER VALUES ('seol', '123', 'PATH', 0, DEFAULT);
INSERT INTO MEMBER VALUES ('ji', '123', 'PATH', 0, DEFAULT);
INSERT INTO MEMBER VALUES ('ki', '123', 'PATH', 0, DEFAULT);
commit;

SELECT * FROM NOTICE;
desc notice;
--NOTICE_NO        NOT NULL NUMBER         
--NOTICE_SUBJECT   NOT NULL VARCHAR2(100)  
--NOTICE_CONTENT            VARCHAR2(1000) 
--BOARD_DATE       NOT NULL TIMESTAMP(6)   
--BOARD_READ_NO    NOT NULL NUMBER         
--NOTICE_TYPE      NOT NULL NUMBER         
--FILE_ORIGIN_NAME          VARCHAR2(255)  
--FILE_SAVE_PATH            VARCHAR2(255)
INSERT INTO NOTICE VALUES (77, 'SUBJECT', NULL, SYSTIMESTAMP, DEFAULT, 2, 'ORIGINNAME', 'FILEPATH');
INSERT INTO NOTICE VALUES (2, 'SUBJECT', NULL, SYSTIMESTAMP, DEFAULT, 1, 'ORIGINNAME', 'FILEPATH');
INSERT INTO NOTICE VALUES (13, 'SUBJECT', NULL, SYSTIMESTAMP, DEFAULT, 1, 'ORIGINNAME', 'FILEPATH');
INSERT INTO NOTICE VALUES (14, 'SUBJECT', NULL, SYSTIMESTAMP, DEFAULT, 1, 'ORIGINNAME', 'FILEPATH');
INSERT INTO NOTICE VALUES (15, 'SUBJECT', NULL, SYSTIMESTAMP, DEFAULT, 1, 'ORIGINNAME', 'FILEPATH');
INSERT INTO NOTICE VALUES (16, 'SUBJECT', NULL, SYSTIMESTAMP, DEFAULT, 1, 'ORIGINNAME', 'FILEPATH');
INSERT INTO NOTICE VALUES (17, 'SUBJECT', NULL, SYSTIMESTAMP, DEFAULT, 2, 'ORIGINNAME', 'FILEPATH');
INSERT INTO NOTICE VALUES (8, 'SUBJECT', NULL, SYSTIMESTAMP, DEFAULT, 2, 'ORIGINNAME', 'FILEPATH');
INSERT INTO NOTICE VALUES (9, 'SUBJECT', NULL, SYSTIMESTAMP, DEFAULT, 2, 'ORIGINNAME', 'FILEPATH');
INSERT INTO NOTICE VALUES (10, 'SUBJECT', NULL, SYSTIMESTAMP, DEFAULT, 2, 'ORIGINNAME', 'FILEPATH');
INSERT INTO NOTICE VALUES (11, 'SUBJECT', NULL, SYSTIMESTAMP, DEFAULT, 2, 'ORIGINNAME', 'FILEPATH');
INSERT INTO NOTICE VALUES (12, 'SUBJECT', NULL, SYSTIMESTAMP, DEFAULT, 2, 'ORIGINNAME', 'FILEPATH');
COMMIT;

select * from lesson;
desc lesson;
--LESSON_CODE  NOT NULL NUMBER  //PK
--LESSON_TYPE  NOT NULL CHAR(1)      //강습종류 1일클래스/레벨업 - 0/1
--LESSON_LEVEL NOT NULL NUMBER       //수업난이도 1~5
--LESSON_START NOT NULL DATE    //default sysdate
--LESSON_END   NOT NULL DATE         //강습신청 개월, ADD_MONTHS
--TEACHER_NAME   NOT NULL VARCHAR2(40)       //강사이름 김,이,박,최, 신, 조, 주
--LESSON_TIME  NOT NULL NUMBER       //0-10:00, 1-12:00, 2-15:00, 3-18:00, 4-19:00, 5-20:00
--LESSON_DAY   NOT NULL VARCHAR2(20) //월,수,금 / 화,목 / 토,일
--LESSON_DURATION          NUMBER   
INSERT INTO LESSON VALUES (1, 1, 1, DEFAULT, ADD_MONTHS(SYSDATE, 1), '김', 0, '월,수,금', 1);
INSERT INTO LESSON VALUES (2, 1, 2, DEFAULT, ADD_MONTHS(SYSDATE, 3), '김', 2, '월,수,금', 3);
INSERT INTO LESSON VALUES (3, 1, 3, DEFAULT, ADD_MONTHS(SYSDATE, 1), '김', 3, '월,수,금', 1);
INSERT INTO LESSON VALUES (4, 1, 5, DEFAULT, ADD_MONTHS(SYSDATE, 1), '김', 5, '월,수,금', 1);
INSERT INTO LESSON VALUES (5, 1, 3, DEFAULT, ADD_MONTHS(SYSDATE, 1), '이', 1, '월,수,금', 1);
INSERT INTO LESSON VALUES (6, 1, 4, DEFAULT, ADD_MONTHS(SYSDATE, 1), '이', 2, '월,수,금', 1);
INSERT INTO LESSON VALUES (7, 1, 2, DEFAULT, ADD_MONTHS(SYSDATE, 3), '이', 3, '월,수,금', 3);
INSERT INTO LESSON VALUES (8, 1, 3, DEFAULT, ADD_MONTHS(SYSDATE, 3), '이', 4, '월,수,금', 3);
INSERT INTO LESSON VALUES (9, 1, 1, DEFAULT, ADD_MONTHS(SYSDATE, 1), '박', 0, '화,목', 1);
INSERT INTO LESSON VALUES (10, 1, 3, DEFAULT, ADD_MONTHS(SYSDATE, 1), '박', 2, '화,목', 1);
INSERT INTO LESSON VALUES (11, 1, 3, DEFAULT, ADD_MONTHS(SYSDATE, 3), '박', 5, '화,목', 3);
INSERT INTO LESSON VALUES (12, 1, 5, DEFAULT, ADD_MONTHS(SYSDATE, 3), '박', 4, '화,목', 3);
INSERT INTO LESSON VALUES (13, 1, 2, DEFAULT, ADD_MONTHS(SYSDATE, 1), '최', 1, '화,목', 1);
INSERT INTO LESSON VALUES (14, 1, 4, DEFAULT, ADD_MONTHS(SYSDATE, 1), '최', 3, '화,목', 1);
INSERT INTO LESSON VALUES (15, 1, 3, DEFAULT, ADD_MONTHS(SYSDATE, 1), '최', 4, '화,목', 1);
INSERT INTO LESSON VALUES (16, 1, 3, DEFAULT, ADD_MONTHS(SYSDATE, 1), '주', 0, '토,일', 1);
INSERT INTO LESSON VALUES (17, 1, 1, DEFAULT, ADD_MONTHS(SYSDATE, 1), '주', 1, '토,일', 1);
INSERT INTO LESSON VALUES (18, 1, 4, DEFAULT, ADD_MONTHS(SYSDATE, 1), '신', 1, '토,일', 1);
INSERT INTO LESSON VALUES (19, 1, 2, DEFAULT, ADD_MONTHS(SYSDATE, 1), '신', 2, '토,일', 1);
INSERT INTO LESSON VALUES (20, 1, 3, DEFAULT, ADD_MONTHS(SYSDATE, 1), '신', 3, '토,일', 1);
INSERT INTO LESSON VALUES (21, 1, 5, DEFAULT, ADD_MONTHS(SYSDATE, 1), '신', 4, '토,일', 1);
INSERT INTO LESSON VALUES (22, 1, 4, DEFAULT, ADD_MONTHS(SYSDATE, 1), '조', 3, '토,일', 1);
INSERT INTO LESSON VALUES (23, 1, 3, DEFAULT, ADD_MONTHS(SYSDATE, 1), '조', 4, '토,일', 1);
INSERT INTO LESSON VALUES (100, 0, 1, NULL, NULL, NULL, 0, '매일', NULL);
INSERT INTO LESSON VALUES (101, 0, 1, NULL, NULL, NULL, 1, '매일', NULL);
INSERT INTO LESSON VALUES (102, 0, 1, NULL, NULL, NULL, 2, '매일', NULL);
INSERT INTO LESSON VALUES (103, 0, 1, NULL, NULL, NULL, 3, '매일', NULL);
INSERT INTO LESSON VALUES (104, 0, 1, NULL, NULL, NULL, 4, '매일', NULL);
COMMIT;

DESC BOARD_PROBLEM;
--BOARD_PROB_NO      NOT NULL NUMBER        
--PROB_SECTOR                 NUMBER        
--PROB_LEVEL                  NUMBER        
--VIDEO_ORIGIN_NAME           VARCHAR2(200) 
--VIDEO_SAVE_PATH             VARCHAR2(200) 
--PROB_CONTENT                VARCHAR2(200) 
--BOARD_PROB_DATE    NOT NULL DATE          
--BOARD_PROB_READ_NO NOT NULL NUMBER        
--MEMBER_ID                 NOT NULL VARCHAR2(20) 
--PROB_SUBJECT NOT NULL VARCHAR2(100)
INSERT INTO BOARD_PROBLEM VALUES (SEQ_BOARD_PROBLEM.NEXTVAL, NULL, NULL, NULL, NULL, NULL, SYSDATE, DEFAULT, 'jo', 'SUBJECT');
INSERT INTO BOARD_PROBLEM VALUES (SEQ_BOARD_PROBLEM.NEXTVAL, NULL, NULL, NULL, NULL, NULL, SYSDATE, DEFAULT, 'jo', 'SUBJECT');
INSERT INTO BOARD_PROBLEM VALUES (SEQ_BOARD_PROBLEM.NEXTVAL, NULL, NULL, NULL, NULL, NULL, SYSDATE, DEFAULT, 'jo', 'SUBJECT');
INSERT INTO BOARD_PROBLEM VALUES (SEQ_BOARD_PROBLEM.NEXTVAL, NULL, NULL, NULL, NULL, NULL, SYSDATE, DEFAULT, 'jo', 'SUBJECT');
INSERT INTO BOARD_PROBLEM VALUES (SEQ_BOARD_PROBLEM.NEXTVAL, NULL, NULL, NULL, NULL, NULL, SYSDATE, DEFAULT, 'jo', 'SUBJECT');
INSERT INTO BOARD_PROBLEM VALUES (SEQ_BOARD_PROBLEM.NEXTVAL, NULL, NULL, NULL, NULL, NULL, SYSDATE, DEFAULT, 'jo', 'SUBJECT');
SELECT * FROM BOARD_PROBLEM;
COMMIT;

CREATE SEQUENCE SEQ_BOARD_ANY;
SELECT * FROM USER_TABLES;
DESC BOARD_ANY;
--BOARD_ANY_NO      NOT NULL NUMBER         
--BOARD_ANY_SUBJECT NOT NULL VARCHAR2(100)  
--ANY_CONTENT                VARCHAR2(1000) 
--BOARD_ANY_DATE    NOT NULL DATE           
--BOARD_ANY_READ_NO          NUMBER         
--MEMBER_ID         NOT NULL VARCHAR2(20)  
INSERT INTO BOARD_ANY VALUES(SEQ_BOARD_ANY.NEXTVAL, 'SUBJECT', 'CONTENT', SYSDATE, DEFAULT, 'jo');
DROP TABLE BOARD_ANY CASCADE CONSTRAINTS;
ALTER TABLE BOARD_ANY RENAME COLUMN ID TO MEMBER_ID;
SELECT * FROM BOARD_ANY;
commit;

DESC BOARD_ASK;
CREATE SEQUENCE SEQ_BOARD_ASK;
--BOARD_ASK_NO      NOT NULL NUMBER         
--ASK_SUBJECT       NOT NULL VARCHAR2(100)  
--ASK_CONTENT       NOT NULL VARCHAR2(1000) 
--BOARD_ASK_DATE    NOT NULL DATE           
--ASK_ANSWER                 VARCHAR2(100)  
--BOARD_ASK_READ_NO NOT NULL NUMBER         
--ASK_PWN_YN        NOT NULL CHAR(1)        
--ASK_PWD                    VARCHAR2(20)   
--MEMBER_ID         NOT NULL VARCHAR2(20)  
INSERT INTO BOARD_ASK VALUES (SEQ_BOARD_ANY.NEXTVAL, 'SUBJECT', 'CONTENT', SYSDATE, 'ANSWER', DEFAULT, DEFAULT, NULL, 'jo');
commit;


--DML
----------------------------------------------------------------------------------------------------
SELECT COUNT(*) CNT FROM BOARD_ANY;
SELECT T2.*
	FROM (SELECT T1.*, ROWNUM RN
		FROM (SELECT BOARD_ANY_NO, BOARD_ANY_SUBJECT, BOARD_ANY_DATE, BOARD_ANY_READ_NO, MEMBER_ID FROM BOARD_ANY ORDER BY BOARD_ANY_NO DESC) T1 ) T2
		WHERE RN BETWEEN 10 and 13;
        
SELECT ROWNUM, BOARD_ANY_NO, BOARD_ANY_SUBJECT, BOARD_ANY_DATE, BOARD_ANY_READ_NO, MEMBER_ID
	FROM (SELECT BOARD_ANY_NO, BOARD_ANY_SUBJECT, BOARD_ANY_DATE, BOARD_ANY_READ_NO, MEMBER_ID FROM BOARD_ANY ORDER BY BOARD_ANY_NO DESC);
SELECT * FROM BOARD_ANY;
SELECT BOARD_ANY_NO, BOARD_ANY_SUBJECT, ANY_CONTENT, BOARD_ANY_DATE, BOARD_ANY_READ_NO, MEMBER_ID FROM BOARD_ANY;
SELECT COUNT(*) CNT FROM BOARD_ASK;
SELECT T2.*
	FROM (SELECT T1.*, ROWNUM RN
	FROM (SELECT BOARD_ASK_NO, ASK_SUBJECT, BOARD_ASK_DATE, BOARD_ASK_READ_NO, ASK_PWN_YN, MEMBER_ID FROM BOARD_ASK ORDER BY BOARD_ASK_NO DESC) T1 ) T2
	WHERE RN BETWEEN 8 and 14;
DESC BOARD_ASK;
SELECT ROWNUM, BOARD_ASK_NO, ASK_SUBJECT, BOARD_ASK_DATE, BOARD_ASK_READ_NO, ASK_PWN_YN, MEMBER_ID
    FROM (SELECT BOARD_ASK_NO, ASK_SUBJECT, BOARD_ASK_DATE, BOARD_ASK_READ_NO, ASK_PWN_YN, MEMBER_ID FROM BOARD_ASK ORDER BY BOARD_ASK_NO DESC);
--BOARD_ASK_NO      NOT NULL NUMBER         
--ASK_SUBJECT       NOT NULL VARCHAR2(100)  
--BOARD_ASK_DATE    NOT NULL DATE   
--BOARD_ASK_READ_NO NOT NULL NUMBER         
--ASK_PWN_YN        NOT NULL CHAR(1)     
--MEMBER_ID         NOT NULL VARCHAR2(20) 
--	private Integer boardAskNo;
--	private String askSubject;
--	private String boardAskDate;
--	private Integer boardAskReadNo;
--	private Integer askPwnYn;
--	private String memberId;
--BOARD_ANY_NO      NOT NULL NUMBER         
--BOARD_ANY_SUBJECT NOT NULL VARCHAR2(100)  
--ANY_CONTENT                VARCHAR2(1000) 
--BOARD_ANY_DATE    NOT NULL DATE           
--BOARD_ANY_READ_NO          NUMBER         
--MEMBER_ID         NOT NULL VARCHAR2(20) 
--  private Integer boardAnyNo;
--	private String boardAnySubject;
--	private String boardAnyDate;
--	private Integer boardAnyReadNo;
--	private String memberId;
--BOARD_ASK_NO      NOT NULL NUMBER         
--ASK_SUBJECT       NOT NULL VARCHAR2(100)  
--ASK_CONTENT       NOT NULL VARCHAR2(1000) 
--BOARD_ASK_DATE    NOT NULL DATE           
--ASK_ANSWER                 VARCHAR2(100)  
--BOARD_ASK_READ_NO NOT NULL NUMBER         
--ASK_PWN_YN        NOT NULL CHAR(1)        
--ASK_PWD                    VARCHAR2(20)   
--MEMBER_ID         NOT NULL VARCHAR2(20) 
SELECT BOARD_ASK_NO, ASK_SUBJECT, ASK_CONTENT, BOARD_ASK_DATE, ASK_ANSWER, BOARD_ASK_READ_NO, ASK_PWN_YN, ASK_PWD, MEMBER_ID FROM BOARD_ASK;
DESC BOARD_ASK;
SELECT * FROM BOARD_ASK WHERE BOARD_ASK_NO=1;
--	private Integer boardAskNo;
--	private String askSubject;
--	private String askContent;
--	private String boardAskDate;
--	private String askAnswer;
--	private Integer boardAskReadNo;
--	private Integer askPwnYn;
--	private String askPwd;
--	private String memberId;



SELECT * FROM USER_TABLES;
SELECT T2.*
        FROM (SELECT T1.*, ROWNUM RN
			FROM (SELECT PROB_SUBJECT, PROB_SECTOR, PROB_LEVEL, BOARD_PROB_DATE, MEMBER_ID, BOARD_PROB_READ_NO FROM BOARD_PROBLEM ORDER BY BOARD_PROB_DATE DESC) T1 ) T2
			WHERE RN BETWEEN 5 and 8;
--	private Integer boardProbNo;
--	private String probSubject;
--	private String probSector;
--	private Integer probLevel;
--	private String probContent;
--	private String boardProbDate;
--	private Integer boardProbReadNo;
--	private String memberId;
--	private String videoOriginName;
--	private String videoSavePath;
DESC BOARD_PROBLEM;
SELECT BOARD_PROB_NO, PROB_SUBJECT, PROB_SECTOR, PROB_LEVEL, PROB_CONTENT, BOARD_PROB_DATE, BOARD_PROB_READ_NO, MEMBER_ID, VIDEO_ORIGIN_NAME, VIDEO_SAVE_PATH
    FROM BOARD_PROBLEM;

--	private String probSector;
--	private Integer probLevel;
--	private String boardProbDate;
--	private Integer boardProbReadNo;
--	private String memberId;
--	private String probSubject;
SELECT ROWNUM, PROB_SUBJECT, PROB_SECTOR, PROB_LEVEL, BOARD_PROB_DATE, MEMBER_ID, BOARD_PROB_READ_NO
    FROM (SELECT PROB_SUBJECT, PROB_SECTOR, PROB_LEVEL, BOARD_PROB_DATE, MEMBER_ID, BOARD_PROB_READ_NO FROM BOARD_PROBLEM ORDER BY BOARD_PROB_DATE DESC);


SELECT T2.*
		FROM (SELECT T1.*, ROWNUM RN
				FROM (SELECT PROB_SUBJECT, PROB_SECTOR, PROB_LEVEL, BOARD_PROB_DATE, MEMBER_ID, BOARD_PROB_READ_NO FROM BOARD_PROBLEM ORDER BY BOARD_PROB_DATE DESC) T1 ) T2
				WHERE RN BETWEEN ? and ?;
                
commit;
SELECT ROWNUM, PROB_SUBJECT, PROB_SECTOR, PROB_LEVEL, BOARD_PROB_DATE, MEMBER_ID, BOARD_PROB_READ_NO
				FROM (SELECT PROB_SUBJECT, PROB_SECTOR, PROB_LEVEL, BOARD_PROB_DATE, MEMBER_ID, BOARD_PROB_READ_NO FROM BOARD_PROBLEM ORDER BY BOARD_PROB_DATE DESC);
DESC BOARD_PROBLEM;
SELECT * FROM BOARD_PROBLEM;
ALTER TABLE BOARD_PROBLEM MODIFY (PROB_SECTOR VARCHAR2(20));
SELECT * FROM FILE_C;
CREATE TABLE "FILE_C" (
	"FILE_ORIGIN_NAME"	VARCHAR(255)		NOT NULL,
	"FILE_SAVE_PATH"	VARCHAR(255)		NOT NULL,
	"BOARD_PROB_NO"	NUMBER		NULL,
	"BOARD_ASK_NO"	NUMBER		NULL,
	"BOARD_ANY_NO"	NUMBER		NULL,
	"BOARD_NO"	NUMBER		NULL
);
DESC FILE_C;
COMMENT ON COLUMN "FILE"."FILE_ORIGIN_NAME" IS '파일실제이름';

COMMENT ON COLUMN "FILE"."FILE_SAVE_PATH" IS '파일저장이름';

COMMENT ON COLUMN "FILE"."BOARD_PROB_NO" IS '문제게시판번호';

COMMENT ON COLUMN "FILE"."BOARD_ASK_NO" IS '문의게시판번호';

COMMENT ON COLUMN "FILE"."BOARD_ANY_NO" IS '자유게시판번호';

COMMENT ON COLUMN "FILE"."BOARD_NO" IS '공지 번호';

ALTER TABLE "FILE_C" ADD CONSTRAINT "FK_BOARD_PROBLEM_TO_FILE_1" FOREIGN KEY (
	"BOARD_PROB_NO"
)
REFERENCES "BOARD_PROBLEM" (
	"BOARD_PROB_NO"
);
ALTER TABLE "FILE_C" ADD CONSTRAINT "FK_ASK_TO_FILE_1" FOREIGN KEY (
	"BOARD_ASK_NO"
)
REFERENCES "ASK" (
	"BOARD_ASK_NO"
);

ALTER TABLE "FILE_C" ADD CONSTRAINT "FK_BOARD_ANY_TO_FILE_1" FOREIGN KEY (
	"BOARD_ANY_NO"
)
REFERENCES "BOARD_ANY" (
	"BOARD_ANY_NO"
);

ALTER TABLE "FILE_C" ADD CONSTRAINT "FK_NOTICE_TO_FILE_1" FOREIGN KEY (
	"BOARD_NO"
)
REFERENCES "NOTICE" (
	"BOARD_NO"
);

COMMIT;

DESC FILE;

select * from user_tables;
drop table BOARD_PROBLEM;
select * from BOARD_PROBLEM;

commit;
select * from notice;
desc file;

SELECT SEQ_BOARD_ID.nextval FROM DUAL;
SELECT SEQ_BOARD_ID.currval FROM DUAL;
select * from user_tables;
select * from user_tables;
desc notice;
DESC NOTICE;
SELECT NOTICE_NO, FILE_ORIGIN_NAME, FILE_SAVE_PATH FROM NOTICE WHERE NOTICE_NO=?;
SELECT * FROM NOTICE;
SELECT COUNT(*) CNT FROM NOTICE;
SELECT t2.* 
    FROM (SELECT T1.*, ROWNUM RN
    FROM (SELECT NOTICE_NO, NOTICE_SUBJECT, NOTICE_CONTENT, BOARD_DATE, BOARD_READ_NO, NOTICE_TYPE, FILE_ORIGIN_NAME, FILE_SAVE_PATH FROM NOTICE ORDER BY NOTICE_NO DESC) T1 ) T2
    WHERE RN BETWEEN 4   and 8;
SELECT NOTICE_NO, NOTICE_SUBJECT, NOTICE_CONTENT, BOARD_DATE, BOARD_READ_NO FROM NOTICE;
desc notice;
commit;
SELECT NOTICE_NO, NOTICE_SUBJECT, NOTICE_CONTENT, BOARD_DATE, BOARD_READ_NO, NOTICE_TYPE FROM NOTICE WHERE NOTICE_NO=1;
CREATE SEQUENCE SEQ_NOTICE_NO;
SELECT SEQ_NOTICE_NO.NEXTVAL FROM DUAL;
ALTER SEQUENCE SEQ_NOTICE_NO NOCYCLE;
DROP SEQUENCE SEQ_NOTICE_NO;
COMMIT;

UPDATE NOTICE SET BOARD_READ_NO=BOARD_READ_NO+1 WHERE NOTICE_NO=1;
select * from notice;

select * from user_tables;
commit;

select * from notice;
select * from member;
insert into member values ('aa', 'aa', 'path', default, default);

DELETE FROM LESSON WHERE LESSON_CODE > 99;
COMMIT;
ALTER TABLE LESSON MODIFY (LESSON_DAY VARCHAR2(40));
DESC LESSON;
ALTER TABLE LESSON MODIFY LESSON_DAY VARCHAR2(20);
SELECT * FROM LESSON;
COMMIT;
CREATE SEQUENCE SEQ_LESSON_WEEDDAY;
CREATE SEQUENCE SEQ_LESSON_WEEDEND;
COMMIT;
SELECT ROWNUM, LESSON_LEVEL, LESSON_TIME, LESSON_DAY
    FROM (SELECT * FROM LESSON WHERE LESSON_TYPE = 0 ORDER BY LESSON_TIME);
SELECT * FROM LESSON;
ALTER TABLE LESSON ADD (LESSON_DURATION NUMBER);
ALTER TABLE LESSON MODIFY (LESSON_DURATION NOT NULL);
UPDATE LESSON SET LESSON_DURATION=1;
ALTER TABLE NOTICE MODIFY (NOTICE_SUBJECT NOT NULL);

ALTER TABLE LESSON 
    MODIFY (LESSON_DAY NULL);
desc lesson;
SELECT * FROM LESSON;

SELECT ROWNUM, LESSON_LEVEL, LESSON_START, LESSON_DURATION, LESSON_END, TEACHER_NAME, LESSON_TIME, LESSON_DAY
FROM( SELECT * FROM LESSON WHERE LESSON_TYPE=1 ORDER BY LESSON_START);
    
SELECT ROWNUM, LESSON_LEVEL, LESSON_START, LESSON_DURATION, LESSON_END, TEACHER_NAME, LESSON_TIME, LESSON_DAY
    FROM (SELECT * FROM LESSON WHERE LESSON_TYPE=1 AND LESSON_DAY ='토,일');
SELECT LESSON_TYPE, LESSON_LEVEL, LESSON_START, LESSON_DURATION, LESSON_END, TEACHER_NAME, LESSON_TIME, LESSON_DAY
    FROM LESSON WHERE LESSON_TYPE=1 AND LESSON_DAY ='토,일';
INSERT INTO LESSON VALUES (25, 1, 3, DEFAULT, ADD_MONTHS(SYSDATE, 1), '조', 5, '토,일', 3);

INSERT INTO LESSON VALUES (104, 0, 1, NULL, NULL, NULL, 4, '매일', NULL);
select * from user_sequences;

RENAME SEQ_LESSON_WEEDEND to SEQ_LESSON_WEEKEND;
SELECT * FROM USER_SEQUENCES;
CREATE SEQUENCE SEQ_LESSON_ONEDAY;
COMMIT;
SELECT * FROM LESSON;
INSERT INTO LESSON VALUES (111,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
DELETE FROM LESSON WHERE LESSON_CODE = 111;
SELECT ROWNUM, LESSON_LEVEL, LESSON_TIME, LESSON_DAY FROM (SELECT * FROM LESSON WHERE LESSON_TYPE = 0 ORDER BY LESSON_TIME);

select * from user_tables;
desc opentime;
ALTER TABLE OPENTIME ADD (OPEN_DAY VARCHAR2(20));
INSERT INTO OPENTIME VALUES ('07:00~24:00', '평일');
INSERT INTO OPENTIME VALUES ('10:00~20:00', '주말');
ALTER TABLE OPENTIME DROP COLUMN CLOSE_DATE;
ALTER TABLE OPENTIME DROP COLUMN CLOSE_REASON;
COMMIT;
CREATE TABLE CLOSE_DAY (
    CLOSE_DATE VARCHAR2(20)
    , CLOSE_REASON VARCHAR2(20)
    );
DESC CLOSE_DAY;
SELECT * FROM USER_TABLES;

SELECT * FROM MEMBER;
--BOARD_PROB_NO      NOT NULL NUMBER        
--PROB_SECTOR                 VARCHAR2(20) //벽이름 DUNGEON
--PROB_LEVEL                  NUMBER        
--VIDEO_ORIGIN_NAME           VARCHAR2(200) 
--VIDEO_SAVE_PATH             VARCHAR2(200) 
--PROB_CONTENT                VARCHAR2(200) 
--BOARD_PROB_DATE    NOT NULL DATE          
--BOARD_PROB_READ_NO NOT NULL NUMBER        
--ID                 NOT NULL VARCHAR2(20)  
CREATE SEQUENCE SEQ_BOARD_PROBLEM;

ALTER TABLE BOARD_PROBLEM MODIFY (PROB_SECTOR VARCHAR2(20));
select * from board_problem;
commit;
select * from user_tables;
desc ask;
--BOARD_ASK_NO      NOT NULL NUMBER         
--ASK_CONTENT       NOT NULL VARCHAR2(1000) 
--BOARD_ASK_DATE    NOT NULL DATE           
--ASK_ANSWER                 VARCHAR2(100)  
--BOARD_ASK_READ_NO NOT NULL NUMBER         
--ASK_PWN_YN        NOT NULL CHAR(1) /0 N, 1 Y
--ASK_PWD                    VARCHAR2(20)   
--ID                NOT NULL VARCHAR2(20)
--ASK_SUBJECT                VARCHAR2(50)  
CREATE SEQUENCE SEQ_ASK;
ALTER TABLE ASK ADD (ASK_SUBJECT VARCHAR2(50));
INSERT INTO ASK VALUES (SEQ_ASK.NEXTVAL, 'CONTENT', SYSDATE, 'ANSWER', 0, 0, NULL, 'jo', 'SUBJECT');
SELECT SEQ_ASK.CURRVAL FROM DUAL;
DROP SEQUENCE SEQ_ASK;
SELECT * FROM ASK;
COMMIT;
DESC MEMBERSHIP;
select * from user_tables;
desc board_problem;
select * from lesson;














